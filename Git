Git is a distributed version control system which means we have copy of our historys
if it is a centralized control system, copy of present code..
install it and check it in command prompt by "git config --global --list" , you will get the username and the user email..

staging area-- is the area where we ask git to work with
git init -b main - initiate in branch main by creating it
git status - gives main branch like branch name

type "git log" to check the commits and all..

if I want to add it to the staging area... use
"git add ." 
if i want the staging area to be committed
"git commit -m "first commit"

if i want to skip staging area, skip git add.
"git commit -a -m "second commit"

use 
"git diff" to see the new changes in working directory
if it is in staging area
"git diff --staged"

if i want to delete a particular file from the git ,
"git rm --cached creds.txt" and then remove from working directory and then commit it to git

if we want to work with 5 or more workers in the same project,
usually, we use github,gitlab or bitbucket by Atlassian has been used

If I want to commit using ssh link than https link, it will create a ssh key
"ssh -keygen -o"
it will create a key , click enter and "cd" and "ls-a"
"cat id_rsa.pub"

we can add tag to the push by using "git tag v1.0" -m "18 dec 2024"
"git push origin v1.0"

we can clone the repository by using "git clone url.git"
also "git clone -b main url.git"

Inorder to reduce the bug impacts in main branch...people push it in other branches
"git checkout feature1"  we dont have branch called feature1

for creation
"git checkout -b feature1" or
"git switch -c feature2"

"git branch" gives the list of branches and pointer in the active branch
if we use "git switch main" it will go to main branch
"git switch -" go to previous branch
For deleting the branch feature1
"git branch -d feature1" 

whenever I put commit, the machine got snapshot of the code and gives an id which is my checkSum(Hexocode values)

How to merge feature1 branch data to min branch
"git pull origin main"
"git switch main"
"git merge feature1"

"git log" will give the history
if we dont want any branch history and all use rebase instead of merge..
"git switch main"
"git rebase feature3" 
we will get clean tree..


if we have one code in main branch.. we have same code in slight different in feature3 branch
now i am going to merge feature3 into main branch
due to same line is going to affect 
it will fail due to merge conflict
so, we have to change the line manually with people wat should come on this line and change accordingly 
and then merge the branch
